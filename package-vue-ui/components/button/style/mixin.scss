$btn-prefix-cls: #{$prefix}-btn;

$btn-ghost-color: $text-color;
$btn-ghost-bg: transparent;
$btn-ghost-border: $border-color-base;

@mixin button-size($height, $padding, $font-size, $border-radius) {
    padding: $padding;
    font-size: $font-size;
    border-radius: $border-radius;
    height: $height;
}

@mixin button-color($color, $background, $border) {
    color: $color;
    background-color: $background;
    border-color: $border;

    >a:only-child {
        color: currentColor;

        &:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background: transparent;
        }
    }
}

@mixin button-disabled() {

    &.disabled,
    &[disabled] {

        &,
        &:hover,
        &:focus,
        &:active,
        &.active {
            @include button-color($btn-disable-color, $btn-disable-bg, $btn-disable-border);
            text-shadow: none;
            box-shadow: none;
        }
    }
}

@mixin button-variant-primary($color, $background) {
    @include button-color($color, $background, $background);
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);
    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);

    &:hover,
    &:focus {
        @include button-color($color, transparentize($background, 0.3), transparentize($background, 0.3));
    }
    &:active,
    &.active {
        @include button-color($color, transparentize($background, 0.1), transparentize($background, 0.1));
    }
}

@mixin button-variant-other($color, $background, $border) {
    @include button-color($color, $background, $border);

    &:hover,
    &:focus {
        @include button-color($primary-5, $background, $primary-5);
    }

    &:active,
    &.active {
        @include button-color($primary-7, $background, $primary-7);
    }

    @include button-disabled();
}

@mixin button-variant-danger($color, $background, $border) {
    
    @include button-color($background, $color, $border);
    &:hover,
    &:focus {
       @include button-color($background, transparentize($color, 0.3), transparentize($color, 0.3));
    }

    &:active,
    &.active {
        @include button-color($background, transparentize($color, 0.1), transparentize($color, 0.1));
    }

    @include button-disabled();

}

@mixin button-variant-ghost($color) {
    @include button-color($color, transparent, $color);
    text-shadow: none;

    &:hover,
    &:focus {
        @include button-color(transparentize($color, 0.5), transparent, transparentize($color, 0.5));
    }

    &:active,
    &.active {
        @include button-color(transparentize($color, 0.3), transparent, transparentize($color, 0.3));
    }

    @include button-disabled();
}


@mixin button-group-base($btnClassName) {
    position: relative;
    display: inline-block;

    >.#{$btnClassName},
    >span>.#{$btnClassName} {
        position: relative;

        &:hover,
        &:focus,
        &:active,
        &.active {
            z-index: 2;
        }

        &:disabled {
            z-index: 0;
        }

    }

    &-lg>.#{$btnClassName},
    &-lg>span>.#{$btnClassName} {
        @include button-size($btn-height-lg, $btn-padding-lg, $btn-font-size-lg, 0);
        line-height: $btn-height-lg -2px;
    }

    &-sm>.#{$btnClassName},
    &-sm>span>.#{$btnClassName} {
        @include button-size($btn-height-sm, $btn-padding-sm, $btn-font-size-sm, 0);
        line-height: $btn-height-sm -2px;

        >.#{$iconfont-css-prefix} {
            font-size: $font-size-base;
        }
    }
}


@mixin btn() {
    display: inline-block;
    font-weight: $btn-font-weight;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: $border-width-base $border-style-base transparent;
    white-space: none;
    @include button-size($btn-height-base, $btn-padding-base, $font-size-base, $btn-border-radius-base);
    user-select: none;
    transition: all 0.3s $ease-in-out;
    position: relative;
    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);

    >.#{$iconfont-css-prefix} {
        line-height: 1;
    }

    &,
    &:active,
    &:focus {
        outline: 0;
    }

    &:not([disabled]):hover {
        text-decoration: none;
    }

    &:not([disabled]):active {
        outline: 0;
        box-shadow: none;
    }

    &.disabled,
    &[disabled] {
        cursor: not-allowed;

        >* {
            pointer-events: none;
        }
    }

    &-lg {
        @include button-size($btn-height-lg,
        $btn-padding-lg,
        $btn-font-size-lg,
        $btn-border-radius-base);
    }

    &-sm {
        @include button-size($btn-height-sm,
        $btn-padding-sm,
        $btn-font-size-sm,
        $btn-border-radius-sm);
    }
}

@mixin btn-primary() {
    @include button-variant-primary($btn-primary-color, $btn-primary-bg);
}

@mixin btn-default() {
    @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);

    &:hover,
    &:focus,
    &:active,
    &.active {
        background: $btn-default-bg;
        text-decoration: none;
    }
}

@mixin btn-ghost() {
    @include button-variant-other($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);
}

@mixin btn-dashed() {
    @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
    border-style: dashed;
}

@mixin btn-danger() {
    @include button-variant-danger($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

@mixin btn-circle($btnClassName: btn) {
    @include square($btn-circle-size);
    @include button-size($btn-circle-size, 0, $font-size-base + 2px, 50%);

    &.#{$btnClassName}-lg {
        @include square($btn-circle-size-lg);
        @include button-size($btn-circle-size-lg, 0, $btn-font-size-lg + 2px, 50%);
    }

    &.#{$btnClassName}-sm {
        @include square($btn-circle-size-sm);
        @include button-size($btn-circle-size-sm, 0, $font-size-base, 50%);
    }
}

@mixin btn-group($btnClassName: btn) {
    @include button-group-base($btnClassName);

    .#{$btnClassName}+.#{$btnClassName},
    .#{$btnClassName}+&,
    span+.#{$btnClassName},
    .#{$btnClassName}+span,
    >span+span,
    &+.#{$btnClassName},
    &+& {
        margin-left: -1px;
    }

    .#{$btnClassName}-primary+.#{$btnClassName}:not(.#{$btnClassName}-primary):not([disabled]) {
        border-left-color: transparent;
    }

    .#{$btnClassName} {
        border-radius: 0;
    }

    >.#{$btnClassName}:first-child,
    >span:first-child>.#{$btnClassName} {
        margin-left: 0;
    }

    >.#{$btnClassName}:only-child {
        border-radius: $btn-border-radius-base;
    }

    >span:only-child>.#{$btnClassName} {
        border-radius: $btn-border-radius-base;
    }

    >.#{$btnClassName}:first-child:not(:last-child),
    >span:first-child:not(:last-child)>.#{$btnClassName} {
        border-bottom-left-radius: $btn-border-radius-base;
        border-top-left-radius: $btn-border-radius-base;
    }

    >.#{$btnClassName}:last-child:not(:first-child),
    >span:last-child:not(:first-child)>.#{$btnClassName} {
        border-bottom-right-radius: $btn-border-radius-base;
        border-top-right-radius: $btn-border-radius-base;
    }

    &-sm {
        >.#{$btnClassName}:only-child {
            border-radius: $btn-border-radius-sm;
        }

        >span:only-child>.#{$btnClassName} {
            border-radius: $btn-border-radius-sm;
        }

        >.#{$btnClassName}:first-child:not(:last-child),
        >span:first-child:not(:last-child)>.#{$btnClassName} {
            border-bottom-left-radius: $btn-border-radius-sm;
            border-top-left-radius: $btn-border-radius-sm;
        }

        >.#{$btnClassName}:first-child:not(:first-child),
        >span:first-child:not(:first-child)>.#{$btnClassName} {
            border-bottom-right-radius: $btn-border-radius-sm;
            border-top-right-radius: $btn-border-radius-sm;
        }
    }

    &>& {
        float: left;
    }

    &>&:not(:first-child):not(:last-child)>.#{$btnClassName} {
        border-radius: 0;
    }

    &>&:first-child:not(:last-child) {
        >.#{$btnClassName}:last-child {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
            padding-right: 8px;
        }
    }

    &>&:last-child:not(:first-child)>.#{$btnClassName}:first-child {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        padding-left: 8px;
    }
}